// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Post {
  author      String
  // author_fullname String
  created_utc DateTime
  id          String   @id @default(uuid())
  // name         String // t3_{id}
  over_18     Boolean
  permalink   String
  score       Int
  selftext    String
  thumbnail   String
  title       String
  url         String
  subreddit   String

  comments Comment[]

  @@index([subreddit])
  @@index([subreddit, created_utc])
  @@index([subreddit, score])
}

model Comment {
  author       String
  // author_fullname String
  body         String
  created_utc  DateTime
  edited       Boolean
  gilded       Int
  id           String   @id @default(uuid())
  is_submitter Boolean // if the author is the same as the post author
  locked       Boolean
  // name            String // t1_{id}
  permalink    String
  score        Int
  // subreddit       String
  // subreddit_id    String

  // link_id         String // t3_{post_id}
  post    Post   @relation(fields: [post_id], references: [id])
  post_id String

  // parent_id       String // t3_{post_id} or t1_{comment_id}
  is_root   Boolean   @default(false)
  parent_id String?
  parent    Comment?  @relation("Replies", fields: [parent_id], references: [id])
  children  Comment[] @relation("Replies")

  @@index([post_id])
  @@index([post_id, created_utc])
  @@index([post_id, score])

  @@index([parent_id])
  @@index([parent_id, created_utc])
  @@index([parent_id, score])
}
